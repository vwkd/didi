program
  cw variables cw statements cw




variables
  variable
  variable cw variables

variable
  any_value cw "=" cw identifer
// todo: define a variables_NOMATCH?

any_value
  string_value_operated
  integer_value
  boolean_value_operated
// note: allows variable in block of variable, must protect against infinite loop of circular definition




statements
  statement
  statement cw statements

statement
  eat
  maybe_eat



eat
  match
  no_match

match
  unnamed_match
  named_match

unnamed_match
  string_val cw ";"

named_match
  string_val cw "@" identifier cw ";"

string_val
  string_value_operated
  string_value_operated cw repetition

repetition
  rep_amount
  rep_amount cw rep_mode

rep_amount
  integer_value
  identifier

rep_mode
  "<"

string_value_operated
  string_value
  string_operator cw string_value

string_operator
  "-"
  "~"

string_value
  string
  block
  identifier

block
  "{" cw statement cw "}"
// note: recursion!



maybe_eat
  conditions cw "?" cw string_val

conditions
  condition
  condition cw boolean_operator cw conditions

boolean_operator
  "&"
  "|"

condition
  boolean_value_operated
  string_value_operated_NOMATCH

string_value_operated_NOMATCH
  string_value_NOMATCH
  string_operator cw string_value_NOMATCH

string_value_NOMATCH
  string
  block_NOMATCH
  identifier

block_NOMATCH
  "{" cw statement_NOMATCH cw "}"

statement_NOMATCH
  eat_NOMATCH
  maybe_eat
// note: recursion!

eat_NOMATCH
  no_match



integer
  digit
  nonzero_digit digits

digits
  digit
  digit digits

digit
  "0"
  "1"
  ...
  "9"

nonzero_digit
  "1"
  ...
  "9"

sequence
  integer_list
  range

integer_list
  "[" cw integers cw "]"

integers
  integer
  integer cw integers

range
  ".."
  integer ".."
  ".." integer
  integer ".." integer

integer_value
  sequence
  integer



boolean
  "true"
  "false"

boolean_value_operated
  boolean
  boolean cw boolean_operator cw boolean_value_operated



string
  '"' characters_dc '"'
  "'" characters_sc "'"
  "`" characters_bt "`"

characters_dc
  ""
  character_dc characters_dc

character_dc
  UNICODE_CHARACTER - '"'
  '\' '"'

characters_sc
  ""
  character_sc characters_sc

character_sc
  UNICODE_CHARACTER - "'"
  "\" "'"

characters_bt
  ""
  character_bt characters_bt

character_bt
  UNICODE_CHARACTER - "`"
  "\" "`"

identifier
  lim_characters

lim_characters
  lim_character
  lim_character lim_characters

lim_character
  UNICODE_CHARACTERS - ASCII_SYMBOLS
// note: reserves ASCII_SYMBOLS for future



comments
  comment
  comment cw comments

comment
  "/*" comment_chars "*/"

comment_chars
  ""
  comment_char comment_chars - "/*" - "*/"

comment_char
  UNICODE_CHARACTERS

cw
  whitespace comments whitespace

whitespace
  ""
  whitespace_char whitespace

whitespace_char
  UNICODE_WHITESPACE_CHARACTER
